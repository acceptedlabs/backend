type Query {

	""" Displays all posts in the forum. """
	posts: [Post]!

	""" Displays top 10 "Hot" posts, as determined by a version of the Reddit ranking algorithm. """
	postsHotTen: [Post]!

	""" Paginated version of `postsHotTen`. """
	postsHot(page: Int!, limit: Int): [Post]!

	""" Returns a post by ID. If not found, returns null. """
	postById(
		" The ID of the post to search for. "
		id: ID!
	): Post

	""" **[Auth Needed]** Returns whether or not the user is onboarded. """
	isOnboarded: Boolean!
	curUser: User

}

type Mutation {

	""" **[Auth Needed]** Onboard the user with the given information. """
	onboard(info: OnboardingInput!): User!

	""" **[Auth Needed]** Post to the forum. Returns the created Post. """
	forumPost(
		" The title for the post. "
		title: String!,
		" The body for the post, in Markdown. "
		body: String!,
		" The tag for the post. "
		tag: String!
	): Post!

	""" **[Auth Needed]** Vote on a forum post. """
	votePost(
		" The ID of the post to vote on. "
		id: ID!,
		" Whether or not to downvote the post. If `false`, will upvote the post. "
		downvote: Boolean!
	): Post!

	""" **[Auth Needed]** Vote on a forum reply. """
	voteReply(
		" The ID of the reply to vote on. "
		id: ID!,
		" Whether or not to downvote the reply. If `false`, will upvote the reply. "
		downvote: Boolean!
	): Post!

	""" **[Auth Needed]** Create a top-level reply to a forum post. """
	replyToPost(
		" The ID of the post to reply to. "
		id: ID!,
		" The body for the reply, in Markdown. "
		body: String!
	): Reply!

	""" **[Auth Needed]** Create a nested reply to a forum reply. """
	replyToReply(
		" The ID of the reply to reply to. "
		id: ID!,
		" The body for the reply, in Markdown. "
		body: String!
	): Reply!

}


type Post {

	""" The autogenerated Mongo ID of the post. """
	id: ID!

	""" The user-supplied post title. """
	title: String!

	""" The Markdown body of the post. """
	body: String!

	""" The UTC Unix timestamp of the post. """
	datetime: String!

	""" A list of replies to this specific post. """
	replies: [Reply]!

	""" The number of upvotes on this post. """
	upvotes: Int!

	""" The number of downvotes on this post. """
	downvotes: Int!

	""" The tag categorization of this post. """
	tag: String!

	""" The user that created this post. Can be `null` if the user doesn't exist anymore. """
	user: User

	"""
	**[Auth Optional]** The user's vote for this post.
	Returns null if unauthenticated or not voted on.
	Otherwise, returns -1 if downvoted, 1 if upvoted.
	"""
	myVote: Int

}

type Reply {

	""" The autogenerated Mongo ID of the reply. """
	id: ID!

	""" The UTC Unix timestamp of the post. """
	datetime: String!

	""" Children replies for this reply. """
	replies: [Reply]!

	""" The Markdown body of the post. """
	body: String!

	""" The number of upvotes on this post. """
	upvotes: Int!

	""" The number of downvotes on this post. """
	downvotes: Int!

	""" The user that created this post. Can be `null` if the user doesn't exist anymore. """
	user: User

}

type OnboardingInfo {

	""" The user's first name. """
	name: String!

	""" Mentor or mentee status of the user. """
	mentorMentee: String!

	""" The user's general field of study. """
	fieldStudy: String!

	""" The user's intended major. """
	intendedMajor: String!

	""" The user's graduation year from their current program. """
	gradYear: Int!

	""" The user's racial identity. """
	race: String!

	""" The user's gender identity. """
	gender: String!

	""" Whether or not the user will apply for financial aid. """
	finaid: Boolean!

	""" Whether or not the user will apply to the Ivy League. """
	applyIvy: Boolean!

	""" Whether or not the user will apply to state flagships. """
	applyStateFlagships: Boolean!

	""" Whether or not the user will apply to other state schools. """
	applyOtherState: Boolean!

	""" Whether or not the user will apply to other private schools. """
	applyOtherPrivate: Boolean!

}

input OnboardingInput {

	""" The user's first name. """
	name: String!

	""" Mentor or mentee status of the user. """
	mentorMentee: String!

	""" The user's general field of study. """
	fieldStudy: String!

	""" The user's intended major. """
	intendedMajor: String!

	""" The user's graduation year from their current program. """
	gradYear: Int!

	""" The user's racial identity. """
	race: String!

	""" The user's gender identity. """
	gender: String!

	""" Whether or not the user will apply for financial aid. """
	finaid: Boolean!

	""" Whether or not the user will apply to the Ivy League. """
	applyIvy: Boolean!

	""" Whether or not the user will apply to state flagships. """
	applyStateFlagships: Boolean!

	""" Whether or not the user will apply to other state schools. """
	applyOtherState: Boolean!

	""" Whether or not the user will apply to other private schools. """
	applyOtherPrivate: Boolean!

}

type User {

	""" The Auth0-generated ID for the user. """
	id: ID!

	""" The user's onboarding data. """
	onboardingInfo: OnboardingInfo

	""" The user's post history. """
	posts: [Post]!

	""" The user's reply history. """
	replies: [Reply]!

}